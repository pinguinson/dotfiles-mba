#! /bin/zsh

PANEL_FIFO=/tmp/panel-fifo
PANEL_HEIGHT=25
PANEL_FONT_FAMILY="Ubuntu:size=10"

if [[ $(pgrep -cx panel) -gt 1 ]]; then
	printf "%s\n" "The panel is already running." >&2
	exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

bspc config top_padding $PANEL_HEIGHT
bspc control --subscribe > "$PANEL_FIFO" &

# time
while [[ true ]]; do
	echo D$(date +%A | sed 's/\(.*\)/\U\1/') $(date +"%d"), $(date +"%H:%M")
	sleep 5
done > $PANEL_FIFO &

# battery
while [[ true ]]; do
	echo B$(acpi -i | sed -n 1p | egrep -o "[0-9]+%")
	sleep 30
done > $PANEL_FIFO &

#volume
while [[ true ]]; do
	OFF=$(amixer get Master | sed -n 5p | grep off)
	if [[ -z $OFF ]]; then
		echo V+$(amixer get Master | egrep -o "[0-9]+%")
	else
		echo V-$(amixer get Master | egrep -o "[0-9]+%")
	fi
	sleep 0.1
done > $PANEL_FIFO &

# wifi
while [[ true ]]; do
	SSID=$(iw dev wlp1s0b1 link | grep SSID | sed 's/.*://' | sed 's/ //' | sed 's/\(.*\)/\U\1/')
	CONNECTION_STATE=$(iw dev wlp1s0b1 link | grep SSID)
	if [ $CONNECTION_STATE ]; then
		echo N+$SSID
	else
		echo N-DISCONNECTED
	fi
	sleep 1
done > $PANEL_FIFO &

. panel_colors

cat "$PANEL_FIFO" | panel_bar | lemonbar -g x$PANEL_HEIGHT -f "$PANEL_FONT_FAMILY" -F "$COLOR_ON" -B "$COLOR_BACKGROUND" -u 2 | zsh &

wait